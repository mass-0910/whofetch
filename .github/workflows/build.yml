name: build

on:
  push:
  pull_request:

jobs:
  # Check for building whofetch
  build_whofetch:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install required libraries on windows
        if: matrix.os == 'windows-latest'
        run: vcpkg install libjpeg-turbo:x64-windows libpng:x64-windows
      - name: Install required libraries on ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libjpeg-dev libpng-dev
      - name: Generate CMake build directory on windows
        if: matrix.os == 'windows-latest'
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
      - name: Generate CMake build directory on ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: cmake -S . -B build
      - name: Build project with cmake
        run: cmake --build build

  # Check for compiling installer
  build_installer:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install required libraries
        run: vcpkg install libjpeg-turbo:x64-windows libpng:x64-windows
      - name: Generate CMake build directory
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
      - name: Build project with cmake
        run: cmake --build build --config Release
      - name: Build installer with Inno Setup
        run: iscc.exe installer/windows/main.iss