name: Test of Installer

on:
  push:
    paths:
      - 'installer/**'
      - ".github/workflows/**"
      - '!**.md'
  pull_request:
    paths:
      - 'installer/**'
      - ".github/workflows/**"
      - '!**.md'

env:
  GET_PATH_COMMAND: (Get-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment' -Name Path).Path)

jobs:
  build_and_test_windows_installer:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install required libraries
        run: vcpkg install libjpeg-turbo:x64-windows libpng:x64-windows
      - name: Generate CMake build directory
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
      - name: Build project with cmake
        run: cmake --build build --config Release
      - name: Build installer with Inno Setup
        run: iscc.exe installer/windows/main.iss

        # Test the installer
      - name: Register current PATH environment variable
        run: echo ("PREV_PATH=" + ${{ env.GET_PATH_COMMAND }} >> $env:GITHUB_ENV
      - name: Check for running of installer
        shell: pwsh
        run: ./build/whofetch-setup-win-x64.exe /SILENT /SUPPRESSMSGBOXES /NORESTART; Start-Sleep -Seconds 10
      - name: Register PATH environment variable after installing
        run: echo ("PATH_AFTER_INSTALL=" + ${{ env.GET_PATH_COMMAND }} >> $env:GITHUB_ENV
      - name: Check to see if the whofetch folder is included in the PATH environment variable
        shell: pwsh
        run: 'if (!("${{ env.PATH_AFTER_INSTALL }}".Contains("C:\Program Files\whofetch"))) { throw }'
      - name: Check to see if previous PATH values are included in the current one
        shell: pwsh
        run: 'if (!("${{ env.PATH_AFTER_INSTALL }}".Contains("${{ env.PREV_PATH }}"))) { throw }'
      - name: Check for running of uninstaller
        shell: pwsh
        run: '[System.Diagnostics.Process]::Start("C:\Program Files\whofetch\unins000.exe", "/SILENT /SUPPRESSMSGBOXES /NORESTART"); Start-Sleep -Seconds 10'
      - name: Register PATH environment variable after uninstalling
        run: echo ("PATH_AFTER_UNINSTALL=" + ${{ env.GET_PATH_COMMAND }} >> $env:GITHUB_ENV
      - name: Check to see if the PATH value is restored by uninstallation
        shell: pwsh
        run: 'if ("${{ env.PATH_AFTER_UNINSTALL }}" -ne "${{ env.PREV_PATH }}") { throw }'